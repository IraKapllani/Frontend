{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\iraka\\\\OneDrive\\\\Desktop\\\\ira-front\\\\src\\\\screens\\\\AddBooks\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport Select from 'react-select';\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddBooks() {\n  _s();\n\n  const [authors, setAuthors] = useState([]);\n  const [categories, setCategories] = useState([]);\n  useEffect(() => {\n    axios.get('http://localhost:3001/authors').then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        console.log('Error!');\n        throw new Error('Could not authenticate you!');\n      }\n\n      return res.data.authors;\n    }).then(authors => {\n      setAuthors(authors);\n    });\n    axios.get('http://localhost:3001/categories').then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        console.log('Error!');\n        throw new Error('Could not authenticate you!');\n      }\n\n      return res.data.categories;\n    }).then(categories => {\n      setCategories(categories);\n    });\n  }, []);\n  let optionsAuthor = authors.map(function (author) {\n    return {\n      value: author.name,\n      label: author.name\n    };\n  });\n  let optionsCategories = categories.map(function (category) {\n    return {\n      value: category.name,\n      label: category.name\n    };\n  });\n  const [category, setCategory] = useState([]);\n\n  function handleCategoryChange(event) {\n    let value = Array.from(event.target.selectedOptions, option => option.value);\n    console.log(value); //a\n    // setCategories(option);\n  }\n\n  function getSelectValues(select) {\n    var result = [];\n    var options = select && select.options;\n    var opt;\n\n    for (var i = 0, iLen = options.length; i < iLen; i++) {\n      opt = options[i];\n\n      if (opt.selected) {\n        result.push(opt.value || opt.text);\n      }\n    }\n\n    return result;\n  }\n\n  function submitLogin(event) {\n    event.preventDefault();\n    const form = event.currentTarget;\n    const title = form.querySelector('input[name=\"title\"]');\n    const author = form.querySelector('input[name=\"author\"]');\n    const description = form.querySelector('input[name=\"description\"]');\n    const categories = form.querySelector('input[name=\"categories\"]');\n    const img = form.querySelector('input[type=\"file\"]');\n    const data = {};\n    data.title = title.value;\n    data.categories = categories.value;\n    console.log(data); // axios.post(\"http://localhost:3001/login\", {\n    //   email: mail.value,\n    //   password: password.value\n    // }).then(res => {\n    //   if (res.status === 422) {\n    //     throw new Error('Validation failed.');\n    //   }\n    //   if (res.status !== 200 && res.status !== 201) {\n    //     console.log('Error!');\n    //     throw new Error('Could not authenticate you!');\n    //   }\n    //   return res.data;\n    // }).then(resData => {\n    // });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitLogin,\n      action: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-materials\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Add Book\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input-type-text\",\n          type: \"text\",\n          placeholder: \"Type books's title\",\n          name: \"title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          className: \"input-type-select\",\n          name: \"author\",\n          options: optionsAuthor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"input-type-text\",\n          id: \"description\",\n          placeholder: \"Type books's description\",\n          name: \"description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          className: \"input-type-select\",\n          onChange: handleCategoryChange,\n          isMulti: true,\n          name: \"categories\",\n          options: optionsCategories\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-submit\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 7\n  }, this);\n}\n\n_s(AddBooks, \"qJo5lG9Gw/MTYm/9VeVXZZtNHbg=\");\n\n_c = AddBooks;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddBooks\");","map":{"version":3,"sources":["C:/Users/iraka/OneDrive/Desktop/ira-front/src/screens/AddBooks/index.jsx"],"names":["Select","axios","useEffect","useState","AddBooks","authors","setAuthors","categories","setCategories","get","then","res","status","console","log","Error","data","optionsAuthor","map","author","value","name","label","optionsCategories","category","setCategory","handleCategoryChange","event","Array","from","target","selectedOptions","option","getSelectValues","select","result","options","opt","i","iLen","length","selected","push","text","submitLogin","preventDefault","form","currentTarget","title","querySelector","description","img"],"mappings":"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","sourcesContent":["import Select from 'react-select';\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function AddBooks() {\r\n\r\n  const [authors, setAuthors] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n  useEffect(() => {\r\n    axios.get('http://localhost:3001/authors')\r\n    .then(res => {\r\n      if (res.status !== 200 && res.status !== 201) {\r\n        console.log('Error!');\r\n        throw new Error('Could not authenticate you!');\r\n      }\r\n      return res.data.authors;\r\n    })\r\n    .then((authors) => {\r\n      setAuthors(authors);\r\n    });\r\n\r\n\r\n    axios.get('http://localhost:3001/categories')\r\n    .then(res => {\r\n      if (res.status !== 200 && res.status !== 201) {\r\n        console.log('Error!');\r\n        throw new Error('Could not authenticate you!');\r\n      }\r\n      return res.data.categories;\r\n    })\r\n    .then((categories) => {\r\n      setCategories(categories);\r\n    });\r\n  }, []);\r\n\r\n\r\n  let optionsAuthor = authors.map(function (author) {\r\n    return { value: author.name, label: author.name };\r\n  })\r\n\r\n\r\n  let optionsCategories = categories.map(function (category) {\r\n    return { value: category.name, label: category.name };\r\n  })  \r\n\r\n  const [category, setCategory] = useState([]);\r\n  function handleCategoryChange(event) {\r\n    let value =Array.from(event.target.selectedOptions, option => option.value);\r\n    console.log(value);//a\r\n    // setCategories(option);\r\n  }\r\n  function getSelectValues(select) \r\n  { var result = []; var options = select && select.options; var opt; for (var i=0, iLen=options.length; i<iLen; i++) { opt = options[i]; if (opt.selected) { result.push(opt.value || opt.text); } } return result; } \r\n  function submitLogin(event) {\r\n    event.preventDefault();\r\n    const form = event.currentTarget;\r\n    const title = form.querySelector('input[name=\"title\"]');\r\n    const author = form.querySelector('input[name=\"author\"]');\r\n    const description = form.querySelector('input[name=\"description\"]');\r\n    const categories = form.querySelector('input[name=\"categories\"]');\r\n    const img = form.querySelector('input[type=\"file\"]');\r\n    const data = {}; \r\n    data.title = title.value;\r\n    data.categories = categories.value;\r\n    console.log(data);\r\n\r\n    // axios.post(\"http://localhost:3001/login\", {\r\n    //   email: mail.value,\r\n    //   password: password.value\r\n    // }).then(res => {\r\n    //   if (res.status === 422) {\r\n    //     throw new Error('Validation failed.');\r\n    //   }\r\n    //   if (res.status !== 200 && res.status !== 201) {\r\n    //     console.log('Error!');\r\n    //     throw new Error('Could not authenticate you!');\r\n    //   }\r\n    //   return res.data;\r\n    // }).then(resData => {\r\n      \r\n    // });\r\n  } \r\n\r\n\r\n\r\n\r\n    return (\r\n      \r\n      <main >\r\n         <form onSubmit={submitLogin} action=\"\">\r\n        <div className=\"add-materials\">\r\n          <h1>Add Book</h1>\r\n          <input className=\"input-type-text\" type=\"text\"  placeholder=\"Type books's title\" name=\"title\"></input>\r\n         <Select  className=\"input-type-select\"  name=\"author\" options={optionsAuthor} />\r\n         <textarea  className=\"input-type-text\" id=\"description\" placeholder=\"Type books's description\" name=\"description\"></textarea>\r\n         <Select  className=\"input-type-select\" onChange={handleCategoryChange}  isMulti name=\"categories\" options={optionsCategories} />\r\n         <input type=\"file\"></input>\r\n         \r\n        </div>\r\n\r\n        <div className=\"button-submit\">\r\n        <button type=\"submit\">Add</button>\r\n        </div>\r\n        </form>\r\n      </main>\r\n    );\r\n  }"]},"metadata":{},"sourceType":"module"}