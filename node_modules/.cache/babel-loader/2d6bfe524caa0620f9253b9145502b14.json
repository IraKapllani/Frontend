{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\iraka\\\\OneDrive\\\\Desktop\\\\ira-front\\\\src\\\\screens\\\\Login\\\\index.jsx\";\nimport { Textinput } from \"../../components/TextInput\";\nimport { BiEnvelope } from 'react-icons/bi';\nimport { BsEye } from 'react-icons/bs';\nimport { Passwordinput } from \"../../components/PasswordInput\";\nimport Auth from './Auth';\nimport './theme/styles.css';\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport Home from './screens/Home';\nimport Books from './screens/Books';\nimport Addauthors from './screens/AddAuthors';\nimport { useState } from 'react';\nimport { Sidebar } from './components/Sidebar';\nimport React, { Component, Fragment } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { required, length, email } from '/validators';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Login extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      loginForm: {\n        email: {\n          value: '',\n          valid: false,\n          touched: false,\n          validators: [required, email]\n        },\n        password: {\n          value: '',\n          valid: false,\n          touched: false,\n          validators: [required, length({\n            min: 5\n          })]\n        },\n        formIsValid: false\n      }\n    };\n\n    this.inputChangeHandler = (input, value) => {\n      this.setState(prevState => {\n        let isValid = true;\n\n        for (const validator of prevState.loginForm[input].validators) {\n          isValid = isValid && validator(value);\n        }\n\n        const updatedForm = { ...prevState.loginForm,\n          [input]: { ...prevState.loginForm[input],\n            valid: isValid,\n            value: value\n          }\n        };\n        let formIsValid = true;\n\n        for (const inputName in updatedForm) {\n          formIsValid = formIsValid && updatedForm[inputName].valid;\n        }\n\n        return {\n          loginForm: updatedForm,\n          formIsValid: formIsValid\n        };\n      });\n    };\n\n    this.inputBlurHandler = input => {\n      this.setState(prevState => {\n        return {\n          loginForm: { ...prevState.loginForm,\n            [input]: { ...prevState.loginForm[input],\n              touched: true\n            }\n          }\n        };\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Auth, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => this.props.onLogin(e, {\n          email: this.state.loginForm.email.value,\n          password: this.state.loginForm.password.value\n        }),\n        children: [/*#__PURE__*/_jsxDEV(Textinput, {\n          id: \"email\",\n          label: \"Your E-Mail\",\n          type: \"email\",\n          control: \"input\",\n          onChange: this.inputChangeHandler,\n          onBlur: this.inputBlurHandler.bind(this, 'email'),\n          value: this.state.loginForm['email'].value,\n          valid: this.state.loginForm['email'].valid,\n          touched: this.state.loginForm['email'].touched\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Textinput, {\n          id: \"password\",\n          label: \"Password\",\n          type: \"password\",\n          control: \"input\",\n          onChange: this.inputChangeHandler,\n          onBlur: this.inputBlurHandler.bind(this, 'password'),\n          value: this.state.loginForm['password'].value,\n          valid: this.state.loginForm['password'].valid,\n          touched: this.state.loginForm['password'].touched\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          design: \"raised\",\n          type: \"submit\",\n          loading: this.props.loading,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(Login);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["C:/Users/iraka/OneDrive/Desktop/ira-front/src/screens/Login/index.jsx"],"names":["Textinput","BiEnvelope","BsEye","Passwordinput","Auth","BrowserRouter","Route","Routes","Home","Books","Addauthors","useState","Sidebar","React","Component","Fragment","withRouter","required","length","email","Login","state","loginForm","value","valid","touched","validators","password","min","formIsValid","inputChangeHandler","input","setState","prevState","isValid","validator","updatedForm","inputName","inputBlurHandler","render","e","props","onLogin","bind","loading"],"mappings":"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","sourcesContent":["import { Textinput } from \"../../components/TextInput\";\r\nimport { BiEnvelope } from 'react-icons/bi'\r\nimport { BsEye } from 'react-icons/bs';\r\nimport { Passwordinput } from \"../../components/PasswordInput\";\r\nimport Auth from './Auth';\r\nimport './theme/styles.css';\r\nimport {\r\n  BrowserRouter,\r\n  Route,\r\n  Routes\r\n} from \"react-router-dom\";\r\nimport Home from './screens/Home';\r\nimport Books from './screens/Books';\r\nimport Addauthors from './screens/AddAuthors';\r\nimport { useState } from 'react';\r\nimport { Sidebar } from './components/Sidebar';\r\nimport React, { Component, Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { required, length, email } from '/validators';\r\n\r\n\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    loginForm: {\r\n      email: {\r\n        value: '',\r\n        valid: false,\r\n        touched: false,\r\n        validators: [required, email]\r\n      },\r\n      password: {\r\n        value: '',\r\n        valid: false,\r\n        touched: false,\r\n        validators: [required, length({ min: 5 })]\r\n      },\r\n      formIsValid: false\r\n    }\r\n  };\r\n\r\n  inputChangeHandler = (input, value) => {\r\n    this.setState(prevState => {\r\n      let isValid = true;\r\n      for (const validator of prevState.loginForm[input].validators) {\r\n        isValid = isValid && validator(value);\r\n      }\r\n      const updatedForm = {\r\n        ...prevState.loginForm,\r\n        [input]: {\r\n          ...prevState.loginForm[input],\r\n          valid: isValid,\r\n          value: value\r\n        }\r\n      };\r\n      let formIsValid = true;\r\n      for (const inputName in updatedForm) {\r\n        formIsValid = formIsValid && updatedForm[inputName].valid;\r\n      }\r\n      return {\r\n        loginForm: updatedForm,\r\n        formIsValid: formIsValid\r\n      };\r\n    });\r\n  };\r\n\r\n  inputBlurHandler = input => {\r\n    this.setState(prevState => {\r\n      return {\r\n        loginForm: {\r\n          ...prevState.loginForm,\r\n          [input]: {\r\n            ...prevState.loginForm[input],\r\n            touched: true\r\n          }\r\n        }\r\n      };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Auth>\r\n        <form\r\n          onSubmit={e =>\r\n            this.props.onLogin(e, {\r\n              email: this.state.loginForm.email.value,\r\n              password: this.state.loginForm.password.value\r\n            })\r\n          }\r\n        >\r\n          <Textinput\r\n            id=\"email\"\r\n            label=\"Your E-Mail\"\r\n            type=\"email\"\r\n            control=\"input\"\r\n            onChange={this.inputChangeHandler}\r\n            onBlur={this.inputBlurHandler.bind(this, 'email')}\r\n            value={this.state.loginForm['email'].value}\r\n            valid={this.state.loginForm['email'].valid}\r\n            touched={this.state.loginForm['email'].touched}\r\n          />\r\n          <Textinput\r\n            id=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            control=\"input\"\r\n            onChange={this.inputChangeHandler}\r\n            onBlur={this.inputBlurHandler.bind(this, 'password')}\r\n            value={this.state.loginForm['password'].value}\r\n            valid={this.state.loginForm['password'].valid}\r\n            touched={this.state.loginForm['password'].touched}\r\n          />\r\n          <button design=\"raised\" type=\"submit\" loading={this.props.loading}>\r\n            Login\r\n          </button>\r\n        </form>\r\n      </Auth>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Login);\r\n"]},"metadata":{},"sourceType":"module"}